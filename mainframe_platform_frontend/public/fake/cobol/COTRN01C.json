{
  "id": "cc702113c11947b9837b46b5e7626909",
  "name": "COTRN01C",
  "path": "DEMO.CARDDEMO.CBL/COTRN01C",
  "label": "COBOL",
  "overview": {
    "programe_name": "COTRN01C",
    "io_files": [],
    "db_accesses": [],
    "copy_files": [
      "COCOM01Y",
      "COTRN01",
      "COTTL01Y",
      "CSDAT01Y",
      "CSMSG01Y",
      "CVTRA05Y",
      "DFHAID",
      "DFHBMSCA"
    ],
    "call_files": [],
    "summarization": "The COBOL program provided handles an interactive CICS transaction screen for processing and viewing transaction data. Here is a clear and logical summary of the code flow across its sections:\n\n### MAIN Flow:\n1. **Initialization & Error Handling:**\n   - Flags and messages are initialized.\n   - If no communication area, it returns control to the previous screen.\n   - If there is a communication area, data is moved, and re-entry is checked.\n\n2. **Transaction Processing:**\n   - In case of a first-time call, various fields are reset or populated with initial values, and the `PROCESS-ENTER-KEY` and `SEND-TRNVIEW-SCREEN` subroutines are called based on specific conditions.\n   - For subsequent interactions, the screen is received, and actions are taken based on keyboard input (like Enter, PF3, PF4, PF5).\n\n3. **Return Control:**\n   - It returns control to the previous screen or another program, such as 'COSGN00C' or 'COMEN01C', depending on the context.\n\n### Detailed Subroutines:\n1. **PROCESS-ENTER-KEY:**\n   - Evaluates the transaction ID (`TRNIDINI`).\n   - Populates various transaction details if no error flag is set.\n   - Reads the transaction file.\n\n2. **RETURN-TO-PREV-SCREEN:**\n   - Prepares data and control information and transfers control back to the calling screen via `XCTL`.\n\n3. **SEND-TRNVIEW-SCREEN:**\n   - Populates header information and sends the map (`COTRN1A`) to the screen using `CICS SEND`.\n\n4. **RECEIVE-TRNVIEW-SCREEN:**\n   - Receives data from the screen map (`COTRN1A`) using `CICS RECEIVE`.\n\n5. **POPULATE-HEADER-INFO:**\n   - Fills header information fields like current date, program name, etc.\n\n6. **READ-TRANSACT-FILE:**\n   - Reads a transaction record from the CICS dataset, handles response codes, and provides appropriate messages.\n\n7. **CLEAR-CURRENT-SCREEN:**\n   - Initializes all relevant fields and sends a clear screen.\n\n8. **INITIALIZE-ALL-FIELDS:**\n   - Sets default or empty values to all fields of the `COTRN1AI` input map structure.\n\n### Key Tables and Fields:\n- **COTRN1AO / COTRN1AI:** These represent the output and input maps for the CICS screen interactions.\n- **CARDDEMO-COMMAREA:** This is used for communication between programs and screens.\n- **TRAN-RECORD:** Represents the transaction record structure read from the dataset.\n\nBy managing control flow, screen interactions, and data handling, this COBOL program ensures seamless processing, viewing, and managing of transaction data in a CICS environment.",
    "io_table": []
  },
  "io_params_def": {
    "input_table": [
      {
        "item_name": "DFHCOMMAREA",
        "cobol_level": "01",
        "cobol_dtype": "",
        "length": "",
        "access_mode": "I-O",
        "dtype": "",
        "default_value": "",
        "remarks": "Java DTO class equivalence"
      },
      {
        "item_name": "   LK-COMMAREA",
        "cobol_level": "05",
        "cobol_dtype": "X",
        "length": "01",
        "access_mode": "I-O",
        "dtype": "String",
        "default_value": "",
        "remarks": "Java String data type equivalence"
      }
    ],
    "input_note": "",
    "output_table": [
      {
        "item_name": "DFHCOMMAREA",
        "cobol_level": "01",
        "cobol_dtype": "",
        "length": "",
        "access_mode": "I-O",
        "dtype": "",
        "default_value": "",
        "remarks": "Java DTO class equivalence"
      },
      {
        "item_name": "   LK-COMMAREA",
        "cobol_level": "05",
        "cobol_dtype": "X",
        "length": "01",
        "access_mode": "I-O",
        "dtype": "String",
        "default_value": "",
        "remarks": "Java String data type equivalence"
      }
    ],
    "output_note": ""
  },
  "process_logic": {
    "paragraph_level": {
      "MAIN-PARA": {
        "paragraph_name": "MAIN-PARA",
        "section": "procedure division",
        "paragraph_code": "MAIN-PARA.\n\n           SET ERR-FLG-OFF     TO TRUE\n           SET USR-MODIFIED-NO TO TRUE\n\n           MOVE SPACES TO WS-MESSAGE\n                          ERRMSGO OF COTRN1AO\n\n           IF EIBCALEN = 0\n               MOVE 'COSGN00C' TO CDEMO-TO-PROGRAM\n               PERFORM RETURN-TO-PREV-SCREEN\n           ELSE\n               MOVE DFHCOMMAREA(1:EIBCALEN) TO CARDDEMO-COMMAREA\n               IF NOT CDEMO-PGM-REENTER\n                   SET CDEMO-PGM-REENTER    TO TRUE\n                   MOVE LOW-VALUES          TO COTRN1AO\n                   MOVE -1       TO TRNIDINL OF COTRN1AI\n                   IF CDEMO-CT01-TRN-SELECTED NOT =\n                                              SPACES AND LOW-VALUES\n                       MOVE CDEMO-CT01-TRN-SELECTED TO\n                            TRNIDINI OF COTRN1AI\n                       PERFORM PROCESS-ENTER-KEY\n                   END-IF\n                   PERFORM SEND-TRNVIEW-SCREEN\n               ELSE\n                   PERFORM RECEIVE-TRNVIEW-SCREEN\n                   EVALUATE EIBAID\n                       WHEN DFHENTER\n                           PERFORM PROCESS-ENTER-KEY\n                       WHEN DFHPF3\n                           IF CDEMO-FROM-PROGRAM = SPACES OR LOW-VALUES\n                               MOVE 'COMEN01C' TO CDEMO-TO-PROGRAM\n                           ELSE\n                               MOVE CDEMO-FROM-PROGRAM TO\n                               CDEMO-TO-PROGRAM\n                           END-IF\n                           PERFORM RETURN-TO-PREV-SCREEN\n                       WHEN DFHPF4\n                           PERFORM CLEAR-CURRENT-SCREEN\n                       WHEN DFHPF5\n                           MOVE 'COTRN00C' TO CDEMO-TO-PROGRAM\n                           PERFORM RETURN-TO-PREV-SCREEN\n                       WHEN OTHER\n                           MOVE 'Y'                       TO WS-ERR-FLG\n                           MOVE CCDA-MSG-INVALID-KEY      TO WS-MESSAGE\n                           PERFORM SEND-TRNVIEW-SCREEN\n                   END-EVALUATE\n               END-IF\n           END-IF\n\n           EXEC CICS RETURN\n                     TRANSID (WS-TRANID)\n                     COMMAREA (CARDDEMO-COMMAREA)\n           END-EXEC.\n\n",
        "paragraph_lines": [86, 139],
        "ref_paragraphs": [
          "RETURN-TO-PREV-SCREEN",
          "PROCESS-ENTER-KEY",
          "SEND-TRNVIEW-SCREEN",
          "RECEIVE-TRNVIEW-SCREEN",
          "PROCESS-ENTER-KEY",
          "RETURN-TO-PREV-SCREEN",
          "CLEAR-CURRENT-SCREEN",
          "RETURN-TO-PREV-SCREEN",
          "SEND-TRNVIEW-SCREEN"
        ],
        "paragraph_logic": [
          "Initializes error flags and user modification flag for the transaction.",
          "Clears message fields to prepare for new screen message.",
          "Performs initial setup or re-entry logic: If initial, sets up fields and returns to the previous screen; if re-entered, processes keys and sends/receives screens accordingly.",
          "During re-entry, sets the transaction specific flags and clears outdated transaction information before processing.",
          "Handles various function keys (Enter, PF3, PF4, PF5, Others) to perform specific actions like processing input, navigating screens, or displaying error messages.",
          "Ends with sending control back to CICS, returning the screen data area and specific transaction ID."
        ]
      },
      "PROCESS-ENTER-KEY": {
        "paragraph_name": "PROCESS-ENTER-KEY",
        "section": "procedure division",
        "paragraph_code": "PROCESS-ENTER-KEY.\n\n           EVALUATE TRUE\n               WHEN TRNIDINI OF COTRN1AI = SPACES OR LOW-VALUES\n                   MOVE 'Y'     TO WS-ERR-FLG\n                   MOVE 'Tran ID can NOT be empty...' TO\n                                   WS-MESSAGE\n                   MOVE -1       TO TRNIDINL OF COTRN1AI\n                   PERFORM SEND-TRNVIEW-SCREEN\n               WHEN OTHER\n                   MOVE -1       TO TRNIDINL OF COTRN1AI\n                   CONTINUE\n           END-EVALUATE\n\n           IF NOT ERR-FLG-ON\n               MOVE SPACES      TO TRNIDI   OF COTRN1AI\n                                   CARDNUMI OF COTRN1AI\n                                   TTYPCDI  OF COTRN1AI\n                                   TCATCDI  OF COTRN1AI\n                                   TRNSRCI  OF COTRN1AI\n                                   TRNAMTI  OF COTRN1AI\n                                   TDESCI   OF COTRN1AI\n                                   TORIGDTI OF COTRN1AI\n                                   TPROCDTI OF COTRN1AI\n                                   MIDI     OF COTRN1AI\n                                   MNAMEI   OF COTRN1AI\n                                   MCITYI   OF COTRN1AI\n                                   MZIPI    OF COTRN1AI\n               MOVE TRNIDINI  OF COTRN1AI TO TRAN-ID\n               PERFORM READ-TRANSACT-FILE\n           END-IF.\n\n           IF NOT ERR-FLG-ON\n               MOVE TRAN-AMT TO WS-TRAN-AMT\n               MOVE TRAN-ID      TO TRNIDI    OF COTRN1AI\n               MOVE TRAN-CARD-NUM      TO CARDNUMI    OF COTRN1AI\n               MOVE TRAN-TYPE-CD        TO TTYPCDI   OF COTRN1AI\n               MOVE TRAN-CAT-CD        TO TCATCDI   OF COTRN1AI\n               MOVE TRAN-SOURCE       TO TRNSRCI  OF COTRN1AI\n               MOVE WS-TRAN-AMT      TO TRNAMTI    OF COTRN1AI\n               MOVE TRAN-DESC      TO TDESCI    OF COTRN1AI\n               MOVE TRAN-ORIG-TS        TO TORIGDTI   OF COTRN1AI\n               MOVE TRAN-PROC-TS       TO TPROCDTI  OF COTRN1AI\n               MOVE TRAN-MERCHANT-ID       TO MIDI  OF COTRN1AI\n               MOVE TRAN-MERCHANT-NAME       TO MNAMEI  OF COTRN1AI\n               MOVE TRAN-MERCHANT-CITY       TO MCITYI  OF COTRN1AI\n               MOVE TRAN-MERCHANT-ZIP       TO MZIPI  OF COTRN1AI\n               PERFORM SEND-TRNVIEW-SCREEN\n           END-IF.\n\n",
        "paragraph_lines": [144, 192],
        "ref_paragraphs": ["SEND-TRNVIEW-SCREEN", "READ-TRANSACT-FILE", "SEND-TRNVIEW-SCREEN"],
        "paragraph_logic": [
          "Evaluates the validity of the transaction ID and sets error flags if invalid, then performs the <SEND-TRNVIEW-SCREEN> paragraph to display the error message.",
          "Clears various fields in the transaction record when no error flag is set, then performs the <READ-TRANSACT-FILE> paragraph to read the transaction data.",
          "Moves transaction data from the read record to the transaction information fields when no error flag is set, prepares screen data, and performs <SEND-TRNVIEW-SCREEN> to update the screen view."
        ]
      },
      "RETURN-TO-PREV-SCREEN": {
        "paragraph_name": "RETURN-TO-PREV-SCREEN",
        "section": "procedure division",
        "paragraph_code": "RETURN-TO-PREV-SCREEN.\n\n           IF CDEMO-TO-PROGRAM = LOW-VALUES OR SPACES\n               MOVE 'COSGN00C' TO CDEMO-TO-PROGRAM\n           END-IF\n           MOVE WS-TRANID    TO CDEMO-FROM-TRANID\n           MOVE WS-PGMNAME   TO CDEMO-FROM-PROGRAM\n           MOVE ZEROS        TO CDEMO-PGM-CONTEXT\n           EXEC CICS\n               XCTL PROGRAM(CDEMO-TO-PROGRAM)\n               COMMAREA(CARDDEMO-COMMAREA)\n           END-EXEC.\n\n",
        "paragraph_lines": [197, 208],
        "ref_paragraphs": [],
        "paragraph_logic": [
          "Checks if the target program is either not set or empty.",
          "If the target program is not set, assigns default value COSGN00C to it.",
          "Moves the current transaction ID to the from transaction ID field.",
          "Moves the current program name to the from program field.",
          "Resets the program context to zeros.",
          "Transfers control to the specified program, passing the communication area."
        ]
      },
      "SEND-TRNVIEW-SCREEN": {
        "paragraph_name": "SEND-TRNVIEW-SCREEN",
        "section": "procedure division",
        "paragraph_code": "SEND-TRNVIEW-SCREEN.\n\n           PERFORM POPULATE-HEADER-INFO\n\n           MOVE WS-MESSAGE TO ERRMSGO OF COTRN1AO\n\n           EXEC CICS SEND\n                     MAP('COTRN1A')\n                     MAPSET('COTRN01')\n                     FROM(COTRN1AO)\n                     ERASE\n                     CURSOR\n           END-EXEC.\n\n",
        "paragraph_lines": [213, 225],
        "ref_paragraphs": ["POPULATE-HEADER-INFO"],
        "paragraph_logic": [
          "Calls the [header information population process]<POPULATE-HEADER-INFO> to populate the header fields of the transaction view screen.",
          "Moves the message from the working storage to the error message field on the screen map.",
          "Sends the screen map COTRN1A from the mapset COTRN01 to the user via CICS, erasing the previous screen content and setting the cursor position."
        ]
      },
      "RECEIVE-TRNVIEW-SCREEN": {
        "paragraph_name": "RECEIVE-TRNVIEW-SCREEN",
        "section": "procedure division",
        "paragraph_code": "RECEIVE-TRNVIEW-SCREEN.\n\n           EXEC CICS RECEIVE\n                     MAP('COTRN1A')\n                     MAPSET('COTRN01')\n                     INTO(COTRN1AI)\n                     RESP(WS-RESP-CD)\n                     RESP2(WS-REAS-CD)\n           END-EXEC.\n\n",
        "paragraph_lines": [230, 238],
        "ref_paragraphs": [],
        "paragraph_logic": [
          "Calls the CICS [receive map process] to receive the data entered by the user on the COTRN1A map from the COTRN01 mapset.",
          "Populates the COTRN1AI area with the received data.",
          "Checks the primary response code in WS-RESP-CD to determine if the receive operation was successful.",
          "Checks the secondary response code in WS-REAS-CD to provide additional error information if needed."
        ]
      },
      "POPULATE-HEADER-INFO": {
        "paragraph_name": "POPULATE-HEADER-INFO",
        "section": "procedure division",
        "paragraph_code": "POPULATE-HEADER-INFO.\n\n           MOVE FUNCTION CURRENT-DATE  TO WS-CURDATE-DATA\n\n           MOVE CCDA-TITLE01           TO TITLE01O OF COTRN1AO\n           MOVE CCDA-TITLE02           TO TITLE02O OF COTRN1AO\n           MOVE WS-TRANID              TO TRNNAMEO OF COTRN1AO\n           MOVE WS-PGMNAME             TO PGMNAMEO OF COTRN1AO\n\n           MOVE WS-CURDATE-MONTH       TO WS-CURDATE-MM\n           MOVE WS-CURDATE-DAY         TO WS-CURDATE-DD\n           MOVE WS-CURDATE-YEAR(3:2)   TO WS-CURDATE-YY\n\n           MOVE WS-CURDATE-MM-DD-YY    TO CURDATEO OF COTRN1AO\n\n           MOVE WS-CURTIME-HOURS       TO WS-CURTIME-HH\n           MOVE WS-CURTIME-MINUTE      TO WS-CURTIME-MM\n           MOVE WS-CURTIME-SECOND      TO WS-CURTIME-SS\n\n           MOVE WS-CURTIME-HH-MM-SS    TO CURTIMEO OF COTRN1AO.\n\n",
        "paragraph_lines": [243, 262],
        "ref_paragraphs": [],
        "paragraph_logic": [
          "Moves the current date to working storage for date management.",
          "Transfers the first title to the corresponding screen field.",
          "Transfers the second title to the corresponding screen field.",
          "Sets up the transaction ID and program name for the screen display.",
          "Breaks down the current date into month, day, and year components for further processing.",
          "Transfers the current date in MM-DD-YY format to the screen field.",
          "Breaks down the current time into hours, minutes, and seconds.",
          "Transfers the current time in HH-MM-SS format to the screen field."
        ]
      },
      "READ-TRANSACT-FILE": {
        "paragraph_name": "READ-TRANSACT-FILE",
        "section": "procedure division",
        "paragraph_code": "READ-TRANSACT-FILE.\n\n           EXEC CICS READ\n                DATASET   (WS-TRANSACT-FILE)\n                INTO      (TRAN-RECORD)\n                LENGTH    (LENGTH OF TRAN-RECORD)\n                RIDFLD    (TRAN-ID)\n                KEYLENGTH (LENGTH OF TRAN-ID)\n                UPDATE\n                RESP      (WS-RESP-CD)\n                RESP2     (WS-REAS-CD)\n           END-EXEC.\n\n           EVALUATE WS-RESP-CD\n               WHEN DFHRESP(NORMAL)\n                   CONTINUE\n               WHEN DFHRESP(NOTFND)\n                   MOVE 'Y'     TO WS-ERR-FLG\n                   MOVE 'Transaction ID NOT found...' TO\n                                   WS-MESSAGE\n                   MOVE -1       TO TRNIDINL OF COTRN1AI\n                   PERFORM SEND-TRNVIEW-SCREEN\n               WHEN OTHER\n                   DISPLAY 'RESP:' WS-RESP-CD 'REAS:' WS-REAS-CD\n                   MOVE 'Y'     TO WS-ERR-FLG\n                   MOVE 'Unable to lookup Transaction...' TO\n                                   WS-MESSAGE\n                   MOVE -1       TO TRNIDINL OF COTRN1AI\n                   PERFORM SEND-TRNVIEW-SCREEN\n           END-EVALUATE.\n\n",
        "paragraph_lines": [267, 296],
        "ref_paragraphs": ["SEND-TRNVIEW-SCREEN", "SEND-TRNVIEW-SCREEN"],
        "paragraph_logic": [
          "Reads a transaction record from the file using the provided transaction ID.",
          "Evaluates the response code to determine the next steps based on the read operations outcome.",
          "If the transaction is found (DFHRESP(NORMAL)), continues processing without any changes.",
          "If the transaction is not found (DFHRESP(NOTFND)), sets an error flag, updates the message, and calls the [screen sending process]<SEND-TRNVIEW-SCREEN>.",
          "For other response codes, displays the response code, sets an error flag, updates the message, and calls the [screen sending process]<SEND-TRNVIEW-SCREEN>."
        ]
      },
      "CLEAR-CURRENT-SCREEN": {
        "paragraph_name": "CLEAR-CURRENT-SCREEN",
        "section": "procedure division",
        "paragraph_code": "CLEAR-CURRENT-SCREEN.\n\n           PERFORM INITIALIZE-ALL-FIELDS.\n           PERFORM SEND-TRNVIEW-SCREEN.\n\n",
        "paragraph_lines": [301, 304],
        "ref_paragraphs": ["INITIALIZE-ALL-FIELDS", "SEND-TRNVIEW-SCREEN"],
        "paragraph_logic": [
          "Performs the [initialization process]<INITIALIZE-ALL-FIELDS> to clear and prepare all fields for new data input.",
          "Calls the [transaction view screen sending process]<SEND-TRNVIEW-SCREEN> to display the cleared screen to the user."
        ]
      },
      "INITIALIZE-ALL-FIELDS": {
        "paragraph_name": "INITIALIZE-ALL-FIELDS",
        "section": "procedure division",
        "paragraph_code": "INITIALIZE-ALL-FIELDS.\n\n           MOVE -1              TO TRNIDINL OF COTRN1AI\n           MOVE SPACES          TO TRNIDINI OF COTRN1AI\n                                   TRNIDI   OF COTRN1AI\n                                   CARDNUMI OF COTRN1AI\n                                   TTYPCDI  OF COTRN1AI\n                                   TCATCDI  OF COTRN1AI\n                                   TRNSRCI  OF COTRN1AI\n                                   TRNAMTI  OF COTRN1AI\n                                   TDESCI   OF COTRN1AI\n                                   TORIGDTI OF COTRN1AI\n                                   TPROCDTI OF COTRN1AI\n                                   MIDI     OF COTRN1AI\n                                   MNAMEI   OF COTRN1AI\n                                   MCITYI   OF COTRN1AI\n                                   MZIPI    OF COTRN1AI\n                                   WS-MESSAGE.\n\n",
        "paragraph_lines": [309, 326],
        "ref_paragraphs": [],
        "paragraph_logic": [
          "Initializes transaction ID to -1 for the COTRN1AI structure.",
          "Sets all string fields like transaction identifier and card number to spaces in the COTRN1AI structure.",
          "Resets type and category codes to spaces in the COTRN1AI structure.",
          "Initializes transaction origin and amount fields to spaces in the COTRN1AI structure.",
          "Prepares description, original date, and process date fields to spaces in the COTRN1AI structure.",
          "Clears out all merchant information fields in the COTRN1AI structure and sets the working storage message to spaces."
        ]
      }
    }
  },
  "copy_graph": {
    "programs": [
      {
        "index": 0,
        "program_id": "COCOM01Y",
        "program_type": "Copy",
        "program_name": "COCOM01Y",
        "call_type": "Static Call",
        "notes": "",
        "locations": "",
        "paragraph": "",
        "identifier": []
      },
      {
        "index": 1,
        "program_id": "COTRN01",
        "program_type": "Copy",
        "program_name": "COTRN01",
        "call_type": "Static Call",
        "notes": "",
        "locations": "",
        "paragraph": "",
        "identifier": []
      },
      {
        "index": 2,
        "program_id": "COTTL01Y",
        "program_type": "Copy",
        "program_name": "COTTL01Y",
        "call_type": "Static Call",
        "notes": "",
        "locations": "",
        "paragraph": "",
        "identifier": []
      },
      {
        "index": 3,
        "program_id": "CSDAT01Y",
        "program_type": "Copy",
        "program_name": "CSDAT01Y",
        "call_type": "Static Call",
        "notes": "",
        "locations": "",
        "paragraph": "",
        "identifier": []
      },
      {
        "index": 4,
        "program_id": "CSMSG01Y",
        "program_type": "Copy",
        "program_name": "CSMSG01Y",
        "call_type": "Static Call",
        "notes": "",
        "locations": "",
        "paragraph": "",
        "identifier": []
      },
      {
        "index": 5,
        "program_id": "CVTRA05Y",
        "program_type": "Copy",
        "program_name": "CVTRA05Y",
        "call_type": "Static Call",
        "notes": "",
        "locations": "",
        "paragraph": "",
        "identifier": []
      },
      {
        "index": 6,
        "program_id": "DFHAID",
        "program_type": "Copy",
        "program_name": "DFHAID",
        "call_type": "Static Call",
        "notes": "",
        "locations": "",
        "paragraph": "",
        "identifier": []
      },
      {
        "index": 7,
        "program_id": "DFHBMSCA",
        "program_type": "Copy",
        "program_name": "DFHBMSCA",
        "call_type": "Static Call",
        "notes": "",
        "locations": "",
        "paragraph": "",
        "identifier": []
      }
    ],
    "details": [""]
  }
}
